{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport ReanimatedModule from \"../ReanimatedModule\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar UPDATED_NODES = [];\nvar loopID = 1;\nvar propUpdatesEnqueued = null;\nvar nodeCount = 0;\nvar callID = \"\";\nexport function getCallID() {\n  return callID;\n}\nexport function setCallID(nextCallID) {\n  callID = nextCallID;\n}\n\nfunction sanitizeConfig(config) {\n  if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos' || ['undefined', 'string', 'function', 'boolean', 'number'].includes(typeof config)) {\n    return config;\n  } else if (Array.isArray(config)) {\n    return config.map(sanitizeConfig);\n  } else if (config instanceof AnimatedNode) {\n    return config.__nodeID;\n  } else if (typeof config === 'object') {\n    var output = {};\n\n    for (var property in config) {\n      if (property in config) {\n        output[property] = sanitizeConfig(config[property]);\n      }\n    }\n\n    return output;\n  }\n\n  return config;\n}\n\nfunction runPropUpdates() {\n  var visitedNodes = new Set();\n\n  var findAndUpdateNodes = function findAndUpdateNodes(node) {\n    if (!node) {\n      console.warn('findAndUpdateNodes was passed a nullish node');\n      return;\n    }\n\n    if (visitedNodes.has(node)) {\n      return;\n    } else {\n      visitedNodes.add(node);\n    }\n\n    if (typeof node.update === 'function') {\n      node.update();\n    } else {\n      var nodes = node.__getChildren();\n\n      if (nodes) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          findAndUpdateNodes(nodes[i]);\n        }\n      }\n    }\n  };\n\n  for (var i = 0; i < UPDATED_NODES.length; i++) {\n    var node = UPDATED_NODES[i];\n    findAndUpdateNodes(node);\n  }\n\n  UPDATED_NODES.length = 0;\n  propUpdatesEnqueued = null;\n  loopID += 1;\n}\n\nvar scheduleUpdates = Platform.OS === 'web' ? requestAnimationFrame : setImmediate;\n\nvar AnimatedNode = function () {\n  function AnimatedNode(nodeConfig, inputNodes) {\n    _classCallCheck(this, AnimatedNode);\n\n    _defineProperty(this, \"__nodeID\", void 0);\n\n    _defineProperty(this, \"__lastLoopID\", {\n      \"\": -1\n    });\n\n    _defineProperty(this, \"__memoizedValue\", {\n      \"\": null\n    });\n\n    _defineProperty(this, \"__children\", []);\n\n    this.__nodeID = ++nodeCount;\n    this.__nodeConfig = sanitizeConfig(nodeConfig);\n    this.__initialized = false;\n    this.__inputNodes = inputNodes && inputNodes.filter(function (node) {\n      return node instanceof AnimatedNode;\n    });\n  }\n\n  _createClass(AnimatedNode, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedNode, id: \".concat(this.__nodeID);\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      this.__nativeInitialize();\n\n      var nodes = this.__inputNodes;\n\n      if (nodes) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          nodes[i].__addChild(this);\n        }\n      }\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var nodes = this.__inputNodes;\n\n      if (nodes) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          nodes[i].__removeChild(this);\n        }\n      }\n\n      this.__nativeTearDown();\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      if (!(callID in this.__lastLoopID) || this.__lastLoopID[callID] < loopID) {\n        this.__lastLoopID[callID] = loopID;\n\n        var result = this.__onEvaluate();\n\n        this.__memoizedValue[callID] = result;\n        return result;\n      }\n\n      return this.__memoizedValue[callID];\n    }\n  }, {\n    key: \"__forceUpdateCache\",\n    value: function __forceUpdateCache(newValue) {\n      this.__memoizedValue[callID] = newValue;\n\n      this.__markUpdated();\n    }\n  }, {\n    key: \"__dangerouslyRescheduleEvaluate\",\n    value: function __dangerouslyRescheduleEvaluate() {\n      this.__lastLoopID[callID] = -1;\n\n      this.__markUpdated();\n    }\n  }, {\n    key: \"__markUpdated\",\n    value: function __markUpdated() {\n      UPDATED_NODES.push(this);\n\n      if (!propUpdatesEnqueued) {\n        propUpdatesEnqueued = scheduleUpdates(runPropUpdates);\n      }\n    }\n  }, {\n    key: \"__nativeInitialize\",\n    value: function __nativeInitialize() {\n      if (!this.__initialized) {\n        ReanimatedModule.createNode(this.__nodeID, _objectSpread({}, this.__nodeConfig));\n        this.__initialized = true;\n      }\n    }\n  }, {\n    key: \"__nativeTearDown\",\n    value: function __nativeTearDown() {\n      if (this.__initialized) {\n        ReanimatedModule.dropNode(this.__nodeID);\n        this.__initialized = false;\n      }\n    }\n  }, {\n    key: \"isNativelyInitialized\",\n    value: function isNativelyInitialized() {\n      return this.__initialized;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      throw new Error('Missing implementation of onEvaluate');\n    }\n  }, {\n    key: \"__getProps\",\n    value: function __getProps() {\n      return this.__getValue();\n    }\n  }, {\n    key: \"__getChildren\",\n    value: function __getChildren() {\n      return this.__children;\n    }\n  }, {\n    key: \"__addChild\",\n    value: function __addChild(child) {\n      if (this.__children.length === 0) {\n        this.__attach();\n      }\n\n      this.__children.push(child);\n\n      child.__nativeInitialize();\n\n      if (ReanimatedModule.connectNodes) {\n        ReanimatedModule.connectNodes(this.__nodeID, child.__nodeID);\n      } else {\n        child.__dangerouslyRescheduleEvaluate();\n      }\n    }\n  }, {\n    key: \"__removeChild\",\n    value: function __removeChild(child) {\n      var index = this.__children.indexOf(child);\n\n      if (index === -1) {\n        console.warn(\"Trying to remove a child that doesn't exist\");\n        return;\n      }\n\n      if (ReanimatedModule.disconnectNodes) {\n        ReanimatedModule.disconnectNodes(this.__nodeID, child.__nodeID);\n      }\n\n      this.__children.splice(index, 1);\n\n      if (this.__children.length === 0) {\n        this.__detach();\n      }\n    }\n  }, {\n    key: \"_connectAnimatedView\",\n    value: function _connectAnimatedView(nativeViewTag) {\n      if (ReanimatedModule.connectNodeToView) {\n        ReanimatedModule.connectNodeToView(this.__nodeID, nativeViewTag);\n      } else {\n        this.__dangerouslyRescheduleEvaluate();\n      }\n    }\n  }, {\n    key: \"_disconnectAnimatedView\",\n    value: function _disconnectAnimatedView(nativeViewTag) {\n      ReanimatedModule.disconnectNodeFromView(this.__nodeID, nativeViewTag);\n    }\n  }]);\n\n  return AnimatedNode;\n}();\n\nexport { AnimatedNode as default };","map":{"version":3,"mappings":"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","names":["ReanimatedModule","UPDATED_NODES","loopID","propUpdatesEnqueued","nodeCount","callID","getCallID","setCallID","nextCallID","sanitizeConfig","config","Platform","OS","includes","Array","isArray","map","AnimatedNode","__nodeID","output","property","runPropUpdates","visitedNodes","Set","findAndUpdateNodes","node","console","warn","has","add","update","nodes","__getChildren","i","l","length","scheduleUpdates","requestAnimationFrame","setImmediate","constructor","nodeConfig","inputNodes","_defineProperty","__nodeConfig","__initialized","__inputNodes","filter","toString","__attach","__nativeInitialize","__addChild","__detach","__removeChild","__nativeTearDown","__getValue","__lastLoopID","result","__onEvaluate","__memoizedValue","__forceUpdateCache","newValue","__markUpdated","__dangerouslyRescheduleEvaluate","push","createNode","dropNode","isNativelyInitialized","Error","__getProps","__children","child","connectNodes","index","indexOf","disconnectNodes","splice","_connectAnimatedView","nativeViewTag","connectNodeToView","_disconnectAnimatedView","disconnectNodeFromView"],"sources":["AnimatedNode.js"],"sourcesContent":["import ReanimatedModule from '../ReanimatedModule';\nimport { Platform } from 'react-native';\n\nconst UPDATED_NODES = [];\n\nlet loopID = 1;\nlet propUpdatesEnqueued = null;\nlet nodeCount = 0;\nlet callID = \"\";\n\nexport function getCallID() {\n  return callID;\n}\n\nexport function setCallID(nextCallID) {\n  callID = nextCallID;\n}\n\nfunction sanitizeConfig(config) {\n  if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos' || ['undefined', 'string', 'function', 'boolean', 'number'].includes(typeof config)) {\n    return config;\n  } else if (Array.isArray(config)) {\n    return config.map(sanitizeConfig);\n  } else if (config instanceof AnimatedNode) {\n    return config.__nodeID;\n  } else if (typeof config === 'object') {\n    const output = {};\n    for (const property in config) {\n      if (property in config) {\n        output[property] = sanitizeConfig(config[property]);\n      }\n    }\n    return output;\n  }\n  // unhandled\n  return config;\n}\n\nfunction runPropUpdates() {\n  const visitedNodes = new Set();\n  const findAndUpdateNodes = node => {\n    if (!node) {\n      console.warn('findAndUpdateNodes was passed a nullish node');\n      return;\n    }\n\n    if (visitedNodes.has(node)) {\n      return;\n    } else {\n      visitedNodes.add(node);\n    }\n    if (typeof node.update === 'function') {\n      node.update();\n    } else {\n      const nodes = node.__getChildren();\n      if (nodes) {\n        for (let i = 0, l = nodes.length; i < l; i++) {\n          findAndUpdateNodes(nodes[i]);\n        }\n      }\n    }\n  };\n  for (let i = 0; i < UPDATED_NODES.length; i++) {\n    const node = UPDATED_NODES[i];\n    findAndUpdateNodes(node);\n  }\n  UPDATED_NODES.length = 0; // clear array\n  propUpdatesEnqueued = null;\n  loopID += 1;\n}\n\nconst scheduleUpdates =\n  Platform.OS === 'web' ? requestAnimationFrame : setImmediate;\n\nexport default class AnimatedNode {\n\n  __nodeID;\n  __lastLoopID = { \"\": -1 };\n  __memoizedValue = { \"\": null };\n  __children = [];\n\n  constructor(nodeConfig, inputNodes) {\n    this.__nodeID = ++nodeCount;\n    this.__nodeConfig = sanitizeConfig(nodeConfig);\n    this.__initialized = false;\n    this.__inputNodes =\n      inputNodes && inputNodes.filter(node => node instanceof AnimatedNode);\n  }\n\n  toString() {\n    return `AnimatedNode, id: ${this.__nodeID}`;\n  }\n\n  __attach() {\n    this.__nativeInitialize();\n\n    const nodes = this.__inputNodes;\n\n    if (nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        nodes[i].__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    const nodes = this.__inputNodes;\n\n    if (nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        nodes[i].__removeChild(this);\n      }\n    }\n\n    this.__nativeTearDown();\n  }\n\n  __getValue() {\n    if (!(callID in this.__lastLoopID) || this.__lastLoopID[callID] < loopID) {\n      this.__lastLoopID[callID] = loopID;\n      const result = this.__onEvaluate();\n      this.__memoizedValue[callID] = result;\n      return result;\n    }\n    return this.__memoizedValue[callID];\n  }\n\n  __forceUpdateCache(newValue) {\n    this.__memoizedValue[callID] = newValue;\n    this.__markUpdated();\n  }\n\n  __dangerouslyRescheduleEvaluate() {\n    this.__lastLoopID[callID] = -1;\n    this.__markUpdated();\n  }\n\n  __markUpdated() {\n    UPDATED_NODES.push(this);\n    if (!propUpdatesEnqueued) {\n      propUpdatesEnqueued = scheduleUpdates(runPropUpdates);\n    }\n  }\n\n  __nativeInitialize() {\n    if (!this.__initialized) {\n      ReanimatedModule.createNode(this.__nodeID, { ...this.__nodeConfig });\n      this.__initialized = true;\n    }\n  }\n\n  __nativeTearDown() {\n    if (this.__initialized) {\n      ReanimatedModule.dropNode(this.__nodeID);\n      this.__initialized = false;\n    }\n  }\n\n  isNativelyInitialized() {\n    return this.__initialized;\n  }\n\n  __onEvaluate() {\n    throw new Error('Missing implementation of onEvaluate');\n  }\n\n  __getProps() {\n    return this.__getValue();\n  }\n\n  __getChildren() {\n    return this.__children;\n  }\n\n  __addChild(child) {\n    if (this.__children.length === 0) {\n      this.__attach();\n    }\n    this.__children.push(child);\n    child.__nativeInitialize();\n\n    if (ReanimatedModule.connectNodes) {\n      ReanimatedModule.connectNodes(this.__nodeID, child.__nodeID);\n    } else {\n      child.__dangerouslyRescheduleEvaluate();\n    }\n  }\n\n  __removeChild(child) {\n    const index = this.__children.indexOf(child);\n    if (index === -1) {\n      console.warn(\"Trying to remove a child that doesn't exist\");\n      return;\n    }\n\n    if (ReanimatedModule.disconnectNodes) {\n      ReanimatedModule.disconnectNodes(this.__nodeID, child.__nodeID);\n    }\n\n    this.__children.splice(index, 1);\n    if (this.__children.length === 0) {\n      this.__detach();\n    }\n  }\n\n  _connectAnimatedView(nativeViewTag) {\n    if (ReanimatedModule.connectNodeToView) {\n      ReanimatedModule.connectNodeToView(this.__nodeID, nativeViewTag);\n    } else {\n      this.__dangerouslyRescheduleEvaluate();\n    }\n  }\n\n  _disconnectAnimatedView(nativeViewTag) {\n    ReanimatedModule.disconnectNodeFromView(this.__nodeID, nativeViewTag);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}