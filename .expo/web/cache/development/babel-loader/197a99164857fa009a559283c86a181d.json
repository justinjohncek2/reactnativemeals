{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport invariant from 'fbjs/lib/invariant';\nimport ReanimatedEventEmitter from \"../ReanimatedEventEmitter\";\nimport { val } from \"../val\";\nimport AnimatedNode from \"./AnimatedNode\";\nvar NODE_MAPPING = new Map();\n\nfunction listener(data) {\n  var node = NODE_MAPPING.get(data.id);\n  node && node._callback(data.args);\n}\n\nvar AnimatedCall = function (_AnimatedNode) {\n  _inherits(AnimatedCall, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedCall);\n\n  function AnimatedCall(args, jsFunction) {\n    var _this;\n\n    _classCallCheck(this, AnimatedCall);\n\n    invariant(args.every(function (el) {\n      return el instanceof AnimatedNode;\n    }), \"Reanimated: Animated.call node args should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes\");\n    _this = _super.call(this, {\n      type: 'call',\n      input: args\n    }, args);\n\n    _defineProperty(_assertThisInitialized(_this), \"_callback\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_args\", void 0);\n\n    _this._callback = jsFunction;\n    _this._args = args;\n    return _this;\n  }\n\n  _createClass(AnimatedCall, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedCall, id: \".concat(this.__nodeID);\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      _get(_getPrototypeOf(AnimatedCall.prototype), \"__attach\", this).call(this);\n\n      NODE_MAPPING.set(this.__nodeID, this);\n\n      if (NODE_MAPPING.size === 1) {\n        ReanimatedEventEmitter.addListener('onReanimatedCall', listener);\n      }\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      NODE_MAPPING.delete(this.__nodeID);\n\n      if (NODE_MAPPING.size === 0) {\n        ReanimatedEventEmitter.removeAllListeners('onReanimatedCall');\n      }\n\n      _get(_getPrototypeOf(AnimatedCall.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      this._callback(this._args.map(val));\n\n      return 0;\n    }\n  }]);\n\n  return AnimatedCall;\n}(AnimatedNode);\n\nexport function createAnimatedCall(args, func) {\n  return new AnimatedCall(args, func);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,oBAAtB;AACA,OAAOC,sBAAP;AACA,SAASC,GAAT;AACA,OAAOC,YAAP;AAEA,IAAMC,YAAY,GAAG,IAAIC,GAAJ,EAArB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EACtB,IAAMC,IAAI,GAAGJ,YAAY,CAACK,GAAbL,CAAiBG,IAAI,CAACG,EAAtBN,CAAb;EACAI,IAAI,IAAIA,IAAI,CAACG,SAALH,CAAeD,IAAI,CAACK,IAApBJ,CAARA;AACD;;IAEKK,Y;;;;;EAIJC,sBAAYF,IAAZE,EAAkBC,UAAlBD,EAA8B;IAAA;;IAAA;;IAC5Bd,SAAS,CACPY,IAAI,CAACI,KAALJ,CAAWK,YAAE;MAAA,OAAIA,EAAE,YAAYd,YAAlB;IAAA,CAAbS,CADO,yIAATZ;IAIA,0BAAM;MAAEkB,IAAI,EAAE,MAAR;MAAgBC,KAAK,EAAEP;IAAvB,CAAN,EAAqCA,IAArC;;IAL4BQ;;IAAAA;;IAM5B,MAAKT,SAAL,GAAiBI,UAAjB;IACA,MAAKM,KAAL,GAAaT,IAAb;IAP4B;EAQ7B;;;;WAEDU,oBAAW;MACT,mCAA4B,KAAKC,QAAjC;IACD;;;WAEDC,oBAAW;MACT;;MACApB,YAAY,CAACqB,GAAbrB,CAAiB,KAAKmB,QAAtBnB,EAAgC,IAAhCA;;MACA,IAAIA,YAAY,CAACsB,IAAbtB,KAAsB,CAA1B,EAA6B;QAC3BH,sBAAsB,CAAC0B,WAAvB1B,CAAmC,kBAAnCA,EAAuDK,QAAvDL;MACD;IACF;;;WAED2B,oBAAW;MACTxB,YAAY,CAACyB,MAAbzB,CAAoB,KAAKmB,QAAzBnB;;MACA,IAAIA,YAAY,CAACsB,IAAbtB,KAAsB,CAA1B,EAA6B;QAC3BH,sBAAsB,CAAC6B,kBAAvB7B,CAA0C,kBAA1CA;MACD;;MACD;IACD;;;WAED8B,wBAAe;MACb,KAAKpB,SAAL,CAAe,KAAKU,KAAL,CAAWW,GAAX,CAAe9B,GAAf,CAAf;;MACA,OAAO,CAAP;IACD;;;;EArCwBC,Y;;AAwC3B,OAAO,SAAS8B,kBAAT,CAA4BrB,IAA5B,EAAkCsB,IAAlC,EAAwC;EAC7C,OAAO,IAAIrB,YAAJ,CAAiBD,IAAjB,EAAuBsB,IAAvB,CAAP;AACD","names":["invariant","ReanimatedEventEmitter","val","AnimatedNode","NODE_MAPPING","Map","listener","data","node","get","id","_callback","args","AnimatedCall","constructor","jsFunction","every","el","type","input","_defineProperty","_args","toString","__nodeID","__attach","set","size","addListener","__detach","delete","removeAllListeners","__onEvaluate","map","createAnimatedCall","func"],"sources":["AnimatedCall.js"],"sourcesContent":["import invariant from 'fbjs/lib/invariant';\nimport ReanimatedEventEmitter from '../ReanimatedEventEmitter';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\n\nconst NODE_MAPPING = new Map();\n\nfunction listener(data) {\n  const node = NODE_MAPPING.get(data.id);\n  node && node._callback(data.args);\n}\n\nclass AnimatedCall extends AnimatedNode {\n  _callback;\n  _args;\n\n  constructor(args, jsFunction) {\n    invariant(\n      args.every(el => el instanceof AnimatedNode),\n      `Reanimated: Animated.call node args should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes`\n    );\n    super({ type: 'call', input: args }, args);\n    this._callback = jsFunction;\n    this._args = args;\n  }\n\n  toString() {\n    return `AnimatedCall, id: ${this.__nodeID}`;\n  }\n\n  __attach() {\n    super.__attach();\n    NODE_MAPPING.set(this.__nodeID, this);\n    if (NODE_MAPPING.size === 1) {\n      ReanimatedEventEmitter.addListener('onReanimatedCall', listener);\n    }\n  }\n\n  __detach() {\n    NODE_MAPPING.delete(this.__nodeID);\n    if (NODE_MAPPING.size === 0) {\n      ReanimatedEventEmitter.removeAllListeners('onReanimatedCall');\n    }\n    super.__detach();\n  }\n\n  __onEvaluate() {\n    this._callback(this._args.map(val));\n    return 0;\n  }\n}\n\nexport function createAnimatedCall(args, func) {\n  return new AnimatedCall(args, func);\n}\n"]},"metadata":{},"sourceType":"module"}